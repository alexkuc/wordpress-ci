# TODO: "Explicitly describe all available bells and whistles of the repo"
# TODO: https://trello.com/c/w8bWYC1R/1-create-wordpress-theme-ci-template-semaphoreci
version: v1.0
name: WordPress CI Pipeline

auto_cancel:
  running:
    when: "branch != 'master'"

fail_fast:
  stop:
    when: "branch != 'master'"

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

execution_time_limit:
  minutes: 15

blocks:

  - name: Prepare cache
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: Composer cache (--dev)
          commands:
            - .semaphore/composer/cache-restore.sh
            - scripts/setup.sh 'composer'
            - .semaphore/composer/cache-store.sh
        - name: NodeJS cache
          commands:
            - .semaphore/yarn/cache-restore.sh
            - scripts/setup.sh 'yarn'
            - .semaphore/yarn/cache-store.sh

  - name: Linters
    dependencies: ['Prepare cache']
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: ShellCheck
          commands:
            - scripts/lint/lint.sh 'shellcheck'
        - name: phplint
          commands:
            - .semaphore/composer/cache-restore.sh
            - scripts/lint/lint.sh 'phplint'
        - name: phpcs
          commands:
            - .semaphore/composer/cache-restore.sh
            - scripts/lint/lint.sh 'phpcs'
        - name: jshint
          commands:
            - scripts/setup.sh 'yarn'
            - scripts/lint/lint.sh 'jshint'

  - name: PHP Tests (docker-compose.yml)
    dependencies: ['Linters']
    task:
      prologue:
        commands:
          - checkout
          - .semaphore/composer/cache-restore.sh
          - sudo chmod -R 777 .
          - scripts/up.sh
      epilogue:
        on_fail:
          commands:
            - artifact push job test/tests/_output/
      jobs:
        - name: acceptance
          commands:
            - scripts/test.sh acceptance
        - name: functional
          commands:
            - scripts/test.sh functional
        - name: wpunit
          commands:
            - scripts/test.sh wpunit
        - name: unit
          commands:
            - scripts/test.sh unit

  - name: PHP Tests (container + service)
    dependencies: ['Linters']
    task:
      prologue:
        commands:
          # TODO: uncomment
          - checkout
          # - .semaphore/composer/cache-restore.sh
          # - sudo chmod -R 777 .
          # - scripts/up.sh
      epilogue:
        on_fail:
          commands:
            - artifact push job test/tests/_output/
      # TODO: complete container + service stage
      jobs:
        - name: acceptance
          commands:
            - echo '...'
        - name: functional
          commands:
            - echo '...'
        - name: wpunit
          commands:
            - echo '...'
        - name: unit
          commands:
            - echo '...'

  - name: Assets
    dependencies: ['Linters']
    task:
      prologue:
        commands:
          - checkout
          - .semaphore/yarn/cache-restore.sh

      jobs:
        - name: Minifier (JS)
          commands:
            - scripts/assets/minified/create-min-js.sh
            - .semaphore/artifact-bug.sh 'src/js' 'create'
            - artifact push workflow src/js/ --destination src/js/

        - name: Minifier (CSS)
          commands:
            - scripts/assets/minified/create-min-css.sh
            - .semaphore/artifact-bug.sh 'src/css' 'create'
            - artifact push workflow src/css/ --destination src/css/

  - name: Deploy
    dependencies: ['PHP Tests (docker-compose.yml)', 'PHP Tests (container + service)', 'Assets']
    skip:
      when: "branch != 'master'"
    task:
      prologue:
        commands:
          - checkout
          - export CI_COMPOSER_NO_DEV='1'
          - .semaphore/composer/cache-restore.sh
          - sudo chmod -R 777 .
      jobs:
        - name: Theme
          commands:
            - artifact pull workflow src/js/ --destination src/js/ --force
            - artifact pull workflow src/css/ --destination src/css/ --force
            - scripts/setup.sh
            - scripts/up.sh
            - .semaphore/artifact-bug.sh 'src/css' 'delete'
            - .semaphore/artifact-bug.sh 'src/js' 'delete'
            - docker exec wordpress ./create-dist.sh
            - artifact push project src/src.zip --force
            - .semaphore/composer/cache-store.sh
